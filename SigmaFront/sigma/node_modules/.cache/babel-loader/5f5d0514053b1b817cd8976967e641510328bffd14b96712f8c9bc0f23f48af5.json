{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api'; // Replace with your API URL\n\nconst getToken = () => {\n  return localStorage.getItem('access_token');\n};\nconst getUserProfile = async () => {\n  const token = getToken();\n  if (!token) {\n    return null;\n  }\n  try {\n    const response = await axios.get(`${API_URL}/profile/`, {\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    return response.data;\n  } catch (error) {\n    if (error.response && error.response.status === 401) {\n      handleLogout();\n    }\n    throw error;\n  }\n};\nconst login = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/token/`, {\n      username,\n      password\n    });\n    localStorage.setItem('access_token', response.data.access);\n    localStorage.setItem('refresh_token', response.data.refresh);\n    // Redirect to home or dashboard page\n    window.location.href = '/'; // Change to your desired route\n  } catch (error) {\n    if (error.response) {\n      // Server responded with a status other than 200 range\n      throw new Error('Invalid username or password');\n    } else if (error.request) {\n      // Request was made but no response was received\n      throw new Error('Network error, please try again later');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      throw new Error('An error occurred, please try again later');\n    }\n  }\n};\nconst handleLogout = async () => {\n  // Remove tokens from localStorage\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n  localStorage.removeItem('user');\n  const refreshToken = localStorage.getItem('refresh_token');\n\n  //  inform the server\n  try {\n    await axios.post(`${API_URL}/logout/`, {\n      refresh_token: refreshToken\n    });\n  } catch (error) {\n    console.error('Error during logout: ', error);\n  }\n\n  // Redirect to login page or home page\n  window.location.href = '/login'; // or any other route\n};\nconst getAllCourses = async () => {\n  const response = await axios.get(`${API_URL}/courses/`);\n  return response.data;\n};\nconst getCourse = async courseId => {\n  const response = await axios.get(`${API_URL}/course/${courseId}/`);\n  return response.data;\n};\nconst searchCourses = async params => {\n  const response = await axios.get(`${API_URL}/courses/search/`, {\n    params,\n    paramsSerializer: params => {\n      return Object.entries(params).map(([key, value]) => Array.isArray(value) ? value.map(v => `${key}=${encodeURIComponent(v)}`).join('&') : `${key}=${encodeURIComponent(value)}`).join('&');\n    }\n  });\n  return response.data;\n};\nexport default {\n  getUserProfile,\n  login,\n  handleLogout,\n  searchCourses,\n  getAllCourses\n};","map":{"version":3,"names":["axios","API_URL","getToken","localStorage","getItem","getUserProfile","token","response","get","headers","Authorization","data","error","status","handleLogout","login","username","password","post","setItem","access","refresh","window","location","href","Error","request","removeItem","refreshToken","refresh_token","console","getAllCourses","getCourse","courseId","searchCourses","params","paramsSerializer","Object","entries","map","key","value","Array","isArray","v","encodeURIComponent","join"],"sources":["/Users/seidkrsic/Desktop/Sigma/SigmaFront/sigma/src/services/api.jsx"],"sourcesContent":["import axios from 'axios';\n\n\nconst API_URL = 'http://127.0.0.1:8000/api'; // Replace with your API URL\n\n\nconst getToken = () => {\n    return localStorage.getItem('access_token');\n  };\n  \n\nconst getUserProfile = async () => {\n    const token = getToken();\n    if (!token) {\n        return null;\n    }\n\n    try {\n        const response = await axios.get(`${API_URL}/profile/`, {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n        });\n        return response.data;\n    } catch (error) {\n        if (error.response && error.response.status === 401) {\n        handleLogout();\n        }\n        throw error;\n    }\n};\n  \n\nconst login = async (username, password) => {\n    try {\n        const response = await axios.post(`${API_URL}/token/`, {\n            username,\n            password,\n        });\n        localStorage.setItem('access_token', response.data.access);\n        localStorage.setItem('refresh_token', response.data.refresh);\n        // Redirect to home or dashboard page\n        window.location.href = '/'; // Change to your desired route\n    } catch (error) {\n        if (error.response) {\n        // Server responded with a status other than 200 range\n        throw new Error('Invalid username or password');\n        } else if (error.request) {\n        // Request was made but no response was received\n        throw new Error('Network error, please try again later');\n        } else {\n        // Something happened in setting up the request that triggered an Error\n        throw new Error('An error occurred, please try again later');\n        }\n    }\n    };\n      \n      \nconst handleLogout = async () => {\n\n    // Remove tokens from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    localStorage.removeItem('user');\n    const refreshToken = localStorage.getItem('refresh_token');\n    \n    //  inform the server\n    try {\n        await axios.post(`${API_URL}/logout/`, { refresh_token: refreshToken });\n    } catch (error) {\n        console.error('Error during logout: ', error);\n    }\n\n\n    \n    // Redirect to login page or home page\n    window.location.href = '/login'; // or any other route\n};\n \nconst getAllCourses = async () => {\n    const response = await axios.get(`${API_URL}/courses/`);\n    return response.data;\n};  \n\nconst getCourse = async (courseId) => {\n    const response = await axios.get(`${API_URL}/course/${courseId}/`);\n    return response.data;\n}; \n\nconst searchCourses = async (params) => {\n    const response = await axios.get(`${API_URL}/courses/search/`, {\n      params,\n      paramsSerializer: params => {\n        return Object.entries(params)\n          .map(([key, value]) => Array.isArray(value) ? value.map(v => `${key}=${encodeURIComponent(v)}`).join('&') : `${key}=${encodeURIComponent(value)}`)\n          .join('&');\n      }\n    });\n    return response.data;\n  };\n\n\n\n\nexport default {\n    getUserProfile, \n    login,\n    handleLogout, \n    searchCourses, \n    getAllCourses,\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAG7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,OAAOC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAC7C,CAAC;AAGH,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EACxB,IAAI,CAACI,KAAK,EAAE;IACR,OAAO,IAAI;EACf;EAEA,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,WAAW,EAAE;MACxDQ,OAAO,EAAE;QACLC,aAAa,EAAE,UAAUJ,KAAK;MAClC;IACA,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACI,IAAI;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACL,QAAQ,IAAIK,KAAK,CAACL,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;MACrDC,YAAY,CAAC,CAAC;IACd;IACA,MAAMF,KAAK;EACf;AACJ,CAAC;AAGD,MAAMG,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxC,IAAI;IACA,MAAMV,QAAQ,GAAG,MAAMP,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,SAAS,EAAE;MACnDe,QAAQ;MACRC;IACJ,CAAC,CAAC;IACFd,YAAY,CAACgB,OAAO,CAAC,cAAc,EAAEZ,QAAQ,CAACI,IAAI,CAACS,MAAM,CAAC;IAC1DjB,YAAY,CAACgB,OAAO,CAAC,eAAe,EAAEZ,QAAQ,CAACI,IAAI,CAACU,OAAO,CAAC;IAC5D;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACL,QAAQ,EAAE;MACpB;MACA,MAAM,IAAIkB,KAAK,CAAC,8BAA8B,CAAC;IAC/C,CAAC,MAAM,IAAIb,KAAK,CAACc,OAAO,EAAE;MAC1B;MACA,MAAM,IAAID,KAAK,CAAC,uCAAuC,CAAC;IACxD,CAAC,MAAM;MACP;MACA,MAAM,IAAIA,KAAK,CAAC,2CAA2C,CAAC;IAC5D;EACJ;AACA,CAAC;AAGL,MAAMX,YAAY,GAAG,MAAAA,CAAA,KAAY;EAE7B;EACAX,YAAY,CAACwB,UAAU,CAAC,cAAc,CAAC;EACvCxB,YAAY,CAACwB,UAAU,CAAC,eAAe,CAAC;EACxCxB,YAAY,CAACwB,UAAU,CAAC,MAAM,CAAC;EAC/B,MAAMC,YAAY,GAAGzB,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;;EAE1D;EACA,IAAI;IACA,MAAMJ,KAAK,CAACkB,IAAI,CAAC,GAAGjB,OAAO,UAAU,EAAE;MAAE4B,aAAa,EAAED;IAAa,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOhB,KAAK,EAAE;IACZkB,OAAO,CAAClB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EACjD;;EAIA;EACAU,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;AACrC,CAAC;AAED,MAAMO,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,MAAMxB,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,WAAW,CAAC;EACvD,OAAOM,QAAQ,CAACI,IAAI;AACxB,CAAC;AAED,MAAMqB,SAAS,GAAG,MAAOC,QAAQ,IAAK;EAClC,MAAM1B,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,WAAWgC,QAAQ,GAAG,CAAC;EAClE,OAAO1B,QAAQ,CAACI,IAAI;AACxB,CAAC;AAED,MAAMuB,aAAa,GAAG,MAAOC,MAAM,IAAK;EACpC,MAAM5B,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,GAAGP,OAAO,kBAAkB,EAAE;IAC7DkC,MAAM;IACNC,gBAAgB,EAAED,MAAM,IAAI;MAC1B,OAAOE,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC,CAC1BI,GAAG,CAAC,CAAC,CAACC,GAAG,EAAEC,KAAK,CAAC,KAAKC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,GAAGA,KAAK,CAACF,GAAG,CAACK,CAAC,IAAI,GAAGJ,GAAG,IAAIK,kBAAkB,CAACD,CAAC,CAAC,EAAE,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,GAAG,GAAGN,GAAG,IAAIK,kBAAkB,CAACJ,KAAK,CAAC,EAAE,CAAC,CACjJK,IAAI,CAAC,GAAG,CAAC;IACd;EACF,CAAC,CAAC;EACF,OAAOvC,QAAQ,CAACI,IAAI;AACtB,CAAC;AAKH,eAAe;EACXN,cAAc;EACdU,KAAK;EACLD,YAAY;EACZoB,aAAa;EACbH;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}