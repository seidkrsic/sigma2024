{"ast":null,"code":"var _jsxFileName = \"/Users/seidkrsic/Desktop/Sigma/SigmaFront/sigma/src/components/AuthContext/AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport api from '../../services/api';\n\n// Kreiramo kontekst za autentifikaciju\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [scrolled, setScrolled] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [user, setUser] = useState(null);\n  const [isPageListVisible, setIsPageListVisible] = useState(true);\n  const togglePageListVisibility = () => {\n    setIsPageListVisible(!isPageListVisible);\n  };\n  useEffect(() => {\n    // Initialize user from localStorage\n    const storedUser = localStorage.getItem('user');\n    const storedAccessToken = localStorage.getItem('access_token');\n    if (storedUser && storedAccessToken) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      const userData = await api.login(username, password);\n      // const userData = await api.getUserProfile(); // Fetch user profile\n      setUser(userData); // Set user data\n      setIsAuthenticated(true);\n      localStorage.setItem('user', JSON.stringify(userData)); // Store user data in localStorage\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    api.handleLogout();\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user'); // Remove user data from localStorage\n  };\n  const ContextData = {\n    isAuthenticated: isAuthenticated,\n    scrolled: scrolled,\n    setScrolled: setScrolled,\n    activeIndex: activeIndex,\n    setActiveIndex: setActiveIndex,\n    login,\n    logout,\n    user,\n    togglePageListVisibility,\n    isPageListVisible\n  };\n\n  // main return of component\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: ContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 11\n  }, this);\n};\n_s(AuthProvider, \"aPn/XHQ/IjA16TOtrDHzutmvGb0=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","scrolled","setScrolled","activeIndex","setActiveIndex","user","setUser","isPageListVisible","setIsPageListVisible","togglePageListVisibility","storedUser","localStorage","getItem","storedAccessToken","JSON","parse","login","username","password","userData","setItem","stringify","error","logout","handleLogout","removeItem","ContextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seidkrsic/Desktop/Sigma/SigmaFront/sigma/src/components/AuthContext/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport api from '../../services/api';\n\n\n// Kreiramo kontekst za autentifikaciju\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [scrolled, setScrolled] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0); \n  const [user, setUser] = useState(null);\n  const [isPageListVisible, setIsPageListVisible] = useState(true);\n\n  const togglePageListVisibility = () => {\n    setIsPageListVisible(!isPageListVisible);\n  };\n\n\nuseEffect(() => {\n  // Initialize user from localStorage\n  const storedUser = localStorage.getItem('user');\n  const storedAccessToken = localStorage.getItem('access_token');\n  if (storedUser && storedAccessToken) {\n    setUser(JSON.parse(storedUser));\n    setIsAuthenticated(true);\n  }\n}, []);\n\n\nconst login = async (username, password) => {\n  try {\n    const userData = await api.login(username, password);\n    // const userData = await api.getUserProfile(); // Fetch user profile\n    setUser(userData); // Set user data\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData)); // Store user data in localStorage\n  } catch (error) {\n    throw error;\n  }\n};\n\n\nconst logout = () => {\n  api.handleLogout();\n  setUser(null);\n  setIsAuthenticated(false);\n  localStorage.removeItem('user'); // Remove user data from localStorage\n\n};\n\n\nconst ContextData  = { \n    isAuthenticated: isAuthenticated, \n    scrolled: scrolled,\n    setScrolled: setScrolled,\n    activeIndex: activeIndex, \n    setActiveIndex: setActiveIndex,\n    login, \n    logout, \n    user, \n    togglePageListVisibility, \n    isPageListVisible, \n}\n\n    // main return of component\n\n    return (\n          <AuthContext.Provider value={ContextData}>\n            {children}\n          </AuthContext.Provider>\n          );\n    };\n\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,GAAG,MAAM,oBAAoB;;AAGpC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACe,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAEhE,MAAMmB,wBAAwB,GAAGA,CAAA,KAAM;IACrCD,oBAAoB,CAAC,CAACD,iBAAiB,CAAC;EAC1C,CAAC;EAGHhB,SAAS,CAAC,MAAM;IACd;IACA,MAAMmB,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,iBAAiB,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC9D,IAAIF,UAAU,IAAIG,iBAAiB,EAAE;MACnCP,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC;MAC/BV,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAGN,MAAMgB,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM3B,GAAG,CAACwB,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MACpD;MACAZ,OAAO,CAACa,QAAQ,CAAC,CAAC,CAAC;MACnBnB,kBAAkB,CAAC,IAAI,CAAC;MACxBW,YAAY,CAACS,OAAO,CAAC,MAAM,EAAEN,IAAI,CAACO,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOG,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAGD,MAAMC,MAAM,GAAGA,CAAA,KAAM;IACnB/B,GAAG,CAACgC,YAAY,CAAC,CAAC;IAClBlB,OAAO,CAAC,IAAI,CAAC;IACbN,kBAAkB,CAAC,KAAK,CAAC;IACzBW,YAAY,CAACc,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EAEnC,CAAC;EAGD,MAAMC,WAAW,GAAI;IACjB3B,eAAe,EAAEA,eAAe;IAChCE,QAAQ,EAAEA,QAAQ;IAClBC,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAEA,WAAW;IACxBC,cAAc,EAAEA,cAAc;IAC9BY,KAAK;IACLO,MAAM;IACNlB,IAAI;IACJI,wBAAwB;IACxBF;EACJ,CAAC;;EAEG;;EAEA,oBACMb,OAAA,CAACC,WAAW,CAACgC,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAA7B,QAAA,EACtCA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE7B,CAAC;AAAClC,EAAA,CAjEOF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAmEzB,eAAeD,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}