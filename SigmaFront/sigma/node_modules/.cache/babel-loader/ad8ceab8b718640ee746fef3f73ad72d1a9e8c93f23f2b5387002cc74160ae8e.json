{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://127.0.0.1:8000/api'; // Replace with your API URL\n\nconst getToken = () => {\n  return localStorage.getItem('access_token');\n};\nconst getUserProfile = async () => {\n  const token = getToken();\n  if (!token) {\n    logout(); // Call logout if no token is found \n    window.location.href = '/';\n    return null;\n  }\n  const response = await axios.get(`${API_URL}/profile/`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\nconst login = async (username, password) => {\n  try {\n    const response = await axios.post(`${API_URL}/token/`, {\n      username,\n      password\n    });\n    localStorage.setItem('access_token', response.data.access);\n    localStorage.setItem('refresh_token', response.data.refresh);\n    // Redirect to home or dashboard page\n    window.location.href = '/'; // Change to your desired route\n  } catch (error) {\n    if (error.response) {\n      // Server responded with a status other than 200 range\n      throw new Error('Invalid username or password');\n    } else if (error.request) {\n      // Request was made but no response was received\n      throw new Error('Network error, please try again later');\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      throw new Error('An error occurred, please try again later');\n    }\n  }\n};\nconst handleLogout = async () => {\n  const refreshToken = localStorage.getItem('refresh_token');\n\n  //  inform the server\n  try {\n    await axios.post(`${API_URL}/api/logout/`, {\n      refresh_token: refreshToken\n    });\n  } catch (error) {\n    console.error('Error during logout: ', error);\n  }\n\n  // Remove tokens from localStorage\n  localStorage.removeItem('access_token');\n  localStorage.removeItem('refresh_token');\n\n  // Redirect to login page or home page\n  window.location.href = '/login'; // or any other route\n};\nexport default {\n  getUserProfile,\n  login,\n  handleLogout\n};","map":{"version":3,"names":["axios","API_URL","getToken","localStorage","getItem","getUserProfile","token","logout","window","location","href","response","get","headers","Authorization","data","login","username","password","post","setItem","access","refresh","error","Error","request","handleLogout","refreshToken","refresh_token","console","removeItem"],"sources":["/Users/seidkrsic/Desktop/Sigma/SigmaFront/sigma/src/services/api.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_URL = 'http://127.0.0.1:8000/api'; // Replace with your API URL\n\n\nconst getToken = () => {\n    return localStorage.getItem('access_token');\n  };\n  \n\nconst getUserProfile = async () => {\n    const token = getToken();\n\n    if (!token) {\n        logout();  // Call logout if no token is found \n        window.location.href = '/'; \n        return null;\n      }\n\n    const response = await axios.get(`${API_URL}/profile/`, {\n        headers: {\n            Authorization: `Bearer ${token}`\n        }\n    });\n    return response.data;\n    };\n  \n\nconst login = async (username, password) => {\n    try {\n        const response = await axios.post(`${API_URL}/token/`, {\n            username,\n            password,\n        });\n        localStorage.setItem('access_token', response.data.access);\n        localStorage.setItem('refresh_token', response.data.refresh);\n        // Redirect to home or dashboard page\n        window.location.href = '/'; // Change to your desired route\n    } catch (error) {\n        if (error.response) {\n        // Server responded with a status other than 200 range\n        throw new Error('Invalid username or password');\n        } else if (error.request) {\n        // Request was made but no response was received\n        throw new Error('Network error, please try again later');\n        } else {\n        // Something happened in setting up the request that triggered an Error\n        throw new Error('An error occurred, please try again later');\n        }\n    }\n    };\n      \n      \nconst handleLogout = async () => {\n\n    const refreshToken = localStorage.getItem('refresh_token');\n    \n    //  inform the server\n    try {\n        await axios.post(`${API_URL}/api/logout/`, { refresh_token: refreshToken });\n    } catch (error) {\n        console.error('Error during logout: ', error);\n    }\n\n    // Remove tokens from localStorage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('refresh_token');\n    \n    // Redirect to login page or home page\n    window.location.href = '/login'; // or any other route\n};\n\n\n\nexport default {\n    getUserProfile, \n    login,\n    handleLogout, \n  };"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B,CAAC,CAAC;;AAG7C,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,OAAOC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;AAC7C,CAAC;AAGH,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,KAAK,GAAGJ,QAAQ,CAAC,CAAC;EAExB,IAAI,CAACI,KAAK,EAAE;IACRC,MAAM,CAAC,CAAC,CAAC,CAAE;IACXC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG;IAC1B,OAAO,IAAI;EACb;EAEF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,WAAW,EAAE;IACpDY,OAAO,EAAE;MACLC,aAAa,EAAE,UAAUR,KAAK;IAClC;EACJ,CAAC,CAAC;EACF,OAAOK,QAAQ,CAACI,IAAI;AACpB,CAAC;AAGL,MAAMC,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;EACxC,IAAI;IACA,MAAMP,QAAQ,GAAG,MAAMX,KAAK,CAACmB,IAAI,CAAC,GAAGlB,OAAO,SAAS,EAAE;MACnDgB,QAAQ;MACRC;IACJ,CAAC,CAAC;IACFf,YAAY,CAACiB,OAAO,CAAC,cAAc,EAAET,QAAQ,CAACI,IAAI,CAACM,MAAM,CAAC;IAC1DlB,YAAY,CAACiB,OAAO,CAAC,eAAe,EAAET,QAAQ,CAACI,IAAI,CAACO,OAAO,CAAC;IAC5D;IACAd,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,GAAG,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOa,KAAK,EAAE;IACZ,IAAIA,KAAK,CAACZ,QAAQ,EAAE;MACpB;MACA,MAAM,IAAIa,KAAK,CAAC,8BAA8B,CAAC;IAC/C,CAAC,MAAM,IAAID,KAAK,CAACE,OAAO,EAAE;MAC1B;MACA,MAAM,IAAID,KAAK,CAAC,uCAAuC,CAAC;IACxD,CAAC,MAAM;MACP;MACA,MAAM,IAAIA,KAAK,CAAC,2CAA2C,CAAC;IAC5D;EACJ;AACA,CAAC;AAGL,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;EAE7B,MAAMC,YAAY,GAAGxB,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC;;EAE1D;EACA,IAAI;IACA,MAAMJ,KAAK,CAACmB,IAAI,CAAC,GAAGlB,OAAO,cAAc,EAAE;MAAE2B,aAAa,EAAED;IAAa,CAAC,CAAC;EAC/E,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACZM,OAAO,CAACN,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;EACjD;;EAEA;EACApB,YAAY,CAAC2B,UAAU,CAAC,cAAc,CAAC;EACvC3B,YAAY,CAAC2B,UAAU,CAAC,eAAe,CAAC;;EAExC;EACAtB,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,QAAQ,CAAC,CAAC;AACrC,CAAC;AAID,eAAe;EACXL,cAAc;EACdW,KAAK;EACLU;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}