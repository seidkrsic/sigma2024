{"ast":null,"code":"var _jsxFileName = \"/Users/seidkrsic/Desktop/Sigma/SigmaFront/sigma/src/components/AuthContext/AuthContext.jsx\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from 'react';\n\n// Kreiramo kontekst za autentifikaciju\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [scrolled, setScrolled] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0);\n  useEffect(() => {\n    // Initialize user from localStorage\n    const storedUser = localStorage.getItem('user');\n    const storedAccessToken = localStorage.getItem('access_token');\n    if (storedUser && storedAccessToken) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n  }, []);\n  const login = async (username, password) => {\n    try {\n      await api.login(username, password);\n      const userData = await api.getUserProfile(); // Fetch user profile\n      setUser(userData); // Set user data\n      setIsAuthenticated(true);\n      localStorage.setItem('user', JSON.stringify(userData)); // Store user data in localStorage\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const logout = () => {\n    api.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user'); // Remove user data from localStorage\n  };\n  const ContextData = {\n    isAuthenticated: isAuthenticated,\n    scrolled: scrolled,\n    setScrolled: setScrolled,\n    activeIndex: activeIndex,\n    setActiveIndex: setActiveIndex,\n    login,\n    logout\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: ContextData,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"2jGSqqMVlJ/YD2R/kYl0m2NNIV4=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","scrolled","setScrolled","activeIndex","setActiveIndex","useEffect","storedUser","localStorage","getItem","storedAccessToken","setUser","JSON","parse","login","username","password","api","userData","getUserProfile","setItem","stringify","error","console","logout","removeItem","ContextData","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/seidkrsic/Desktop/Sigma/SigmaFront/sigma/src/components/AuthContext/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState } from 'react';\n\n// Kreiramo kontekst za autentifikaciju\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [scrolled, setScrolled] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0); \n\n  useEffect(() => {\n    // Initialize user from localStorage\n    const storedUser = localStorage.getItem('user');\n    const storedAccessToken = localStorage.getItem('access_token');\n    if (storedUser && storedAccessToken) {\n      setUser(JSON.parse(storedUser));\n      setIsAuthenticated(true);\n    }\n  }, []);\n\n  const login = async (username, password) => {\n    try {\n      await api.login(username, password);\n      const userData = await api.getUserProfile(); // Fetch user profile\n      setUser(userData); // Set user data\n      setIsAuthenticated(true);\n      localStorage.setItem('user', JSON.stringify(userData)); // Store user data in localStorage\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    api.logout();\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('user'); // Remove user data from localStorage\n  };\n\n\n\n\n  const ContextData  = { \n    isAuthenticated: isAuthenticated, \n    scrolled: scrolled,\n    setScrolled: setScrolled,\n    activeIndex: activeIndex, \n    setActiveIndex: setActiveIndex,\n    login, \n    logout, \n \n  }\n\n  return (\n    <AuthContext.Provider value={ContextData}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACS,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEjDa,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAC/C,MAAMC,iBAAiB,GAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IAC9D,IAAIF,UAAU,IAAIG,iBAAiB,EAAE;MACnCC,OAAO,CAACC,IAAI,CAACC,KAAK,CAACN,UAAU,CAAC,CAAC;MAC/BN,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF,MAAMC,GAAG,CAACH,KAAK,CAACC,QAAQ,EAAEC,QAAQ,CAAC;MACnC,MAAME,QAAQ,GAAG,MAAMD,GAAG,CAACE,cAAc,CAAC,CAAC,CAAC,CAAC;MAC7CR,OAAO,CAACO,QAAQ,CAAC,CAAC,CAAC;MACnBjB,kBAAkB,CAAC,IAAI,CAAC;MACxBO,YAAY,CAACY,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACH,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAME,MAAM,GAAGA,CAAA,KAAM;IACnBP,GAAG,CAACO,MAAM,CAAC,CAAC;IACZb,OAAO,CAAC,IAAI,CAAC;IACbV,kBAAkB,CAAC,KAAK,CAAC;IACzBO,YAAY,CAACiB,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;EACnC,CAAC;EAKD,MAAMC,WAAW,GAAI;IACnB1B,eAAe,EAAEA,eAAe;IAChCE,QAAQ,EAAEA,QAAQ;IAClBC,WAAW,EAAEA,WAAW;IACxBC,WAAW,EAAEA,WAAW;IACxBC,cAAc,EAAEA,cAAc;IAC9BS,KAAK;IACLU;EAEF,CAAC;EAED,oBACE7B,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACC,KAAK,EAAEF,WAAY;IAAA5B,QAAA,EACtCA;EAAQ;IAAA+B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACjC,EAAA,CAtDWF,YAAY;AAAAoC,EAAA,GAAZpC,YAAY;AAwDzB,eAAeD,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}