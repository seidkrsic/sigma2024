{"ast":null,"code":"import React,{createContext,useState,useEffect}from'react';import api from'../../services/api';// Kreiramo kontekst za autentifikaciju\nimport{jsx as _jsx}from\"react/jsx-runtime\";const AuthContext=/*#__PURE__*/createContext();export const AuthProvider=_ref=>{let{children}=_ref;const[isAuthenticated,setIsAuthenticated]=useState(true);const[scrolled,setScrolled]=useState(false);const[activeIndex,setActiveIndex]=useState(0);const[user,setUser]=useState(null);const[isPageListVisible,setIsPageListVisible]=useState(true);const togglePageListVisibility=()=>{setIsPageListVisible(!isPageListVisible);};useEffect(()=>{// Initialize user from localStorage\nconst storedUser=localStorage.getItem('user');const storedAccessToken=localStorage.getItem('access_token');if(storedUser&&storedAccessToken){setUser(JSON.parse(storedUser));setIsAuthenticated(true);}},[]);const login=async(username,password)=>{try{await api.login(username,password);const userData=await api.getUserProfile();// Fetch user profile\nsetUser(userData);// Set user data\nsetIsAuthenticated(true);localStorage.setItem('user',JSON.stringify(userData));// Store user data in localStorage\n}catch(error){throw error;}};const logout=()=>{api.handleLogout();setUser(null);setIsAuthenticated(false);localStorage.removeItem('user');// Remove user data from localStorage\n};const ContextData={isAuthenticated:isAuthenticated,scrolled:scrolled,setScrolled:setScrolled,activeIndex:activeIndex,setActiveIndex:setActiveIndex,login,logout,user,togglePageListVisibility,isPageListVisible};// main return of component\nreturn/*#__PURE__*/_jsx(AuthContext.Provider,{value:ContextData,children:children});};export default AuthContext;","map":{"version":3,"names":["React","createContext","useState","useEffect","api","jsx","_jsx","AuthContext","AuthProvider","_ref","children","isAuthenticated","setIsAuthenticated","scrolled","setScrolled","activeIndex","setActiveIndex","user","setUser","isPageListVisible","setIsPageListVisible","togglePageListVisibility","storedUser","localStorage","getItem","storedAccessToken","JSON","parse","login","username","password","userData","getUserProfile","setItem","stringify","error","logout","handleLogout","removeItem","ContextData","Provider","value"],"sources":["/Users/seidkrsic/Desktop/Sigma/SigmaFront/sigma/src/components/AuthContext/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport api from '../../services/api';\n\n\n// Kreiramo kontekst za autentifikaciju\nconst AuthContext = createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const [scrolled, setScrolled] = useState(false);\n  const [activeIndex, setActiveIndex] = useState(0); \n  const [user, setUser] = useState(null);\n  const [isPageListVisible, setIsPageListVisible] = useState(true);\n\n  const togglePageListVisibility = () => {\n    setIsPageListVisible(!isPageListVisible);\n  };\n\n\nuseEffect(() => {\n  // Initialize user from localStorage\n  const storedUser = localStorage.getItem('user');\n  const storedAccessToken = localStorage.getItem('access_token');\n  if (storedUser && storedAccessToken) {\n    setUser(JSON.parse(storedUser));\n    setIsAuthenticated(true);\n  }\n}, []);\n\n\nconst login = async (username, password) => {\n  try {\n    await api.login(username, password);\n    const userData = await api.getUserProfile(); // Fetch user profile\n    setUser(userData); // Set user data\n    setIsAuthenticated(true);\n    localStorage.setItem('user', JSON.stringify(userData)); // Store user data in localStorage\n  } catch (error) {\n    throw error;\n  }\n};\n\n\nconst logout = () => {\n  api.handleLogout();\n  setUser(null);\n  setIsAuthenticated(false);\n  localStorage.removeItem('user'); // Remove user data from localStorage\n\n};\n\n\nconst ContextData  = { \n    isAuthenticated: isAuthenticated, \n    scrolled: scrolled,\n    setScrolled: setScrolled,\n    activeIndex: activeIndex, \n    setActiveIndex: setActiveIndex,\n    login, \n    logout, \n    user, \n    togglePageListVisibility, \n    isPageListVisible, \n}\n\n    // main return of component\n\n    return (\n          <AuthContext.Provider value={ContextData}>\n            {children}\n          </AuthContext.Provider>\n          );\n    };\n\nexport default AuthContext;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,GAAG,KAAM,oBAAoB,CAGpC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,KAAM,CAAAC,WAAW,cAAGN,aAAa,CAAC,CAAC,CAEnC,MAAO,MAAM,CAAAO,YAAY,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACvC,KAAM,CAACE,eAAe,CAAEC,kBAAkB,CAAC,CAAGV,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACW,QAAQ,CAAEC,WAAW,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CAC/C,KAAM,CAACa,WAAW,CAAEC,cAAc,CAAC,CAAGd,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACe,IAAI,CAAEC,OAAO,CAAC,CAAGhB,QAAQ,CAAC,IAAI,CAAC,CACtC,KAAM,CAACiB,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGlB,QAAQ,CAAC,IAAI,CAAC,CAEhE,KAAM,CAAAmB,wBAAwB,CAAGA,CAAA,GAAM,CACrCD,oBAAoB,CAAC,CAACD,iBAAiB,CAAC,CAC1C,CAAC,CAGHhB,SAAS,CAAC,IAAM,CACd;AACA,KAAM,CAAAmB,UAAU,CAAGC,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC,CAC/C,KAAM,CAAAC,iBAAiB,CAAGF,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CAC9D,GAAIF,UAAU,EAAIG,iBAAiB,CAAE,CACnCP,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,CAAC,CAC/BV,kBAAkB,CAAC,IAAI,CAAC,CAC1B,CACF,CAAC,CAAE,EAAE,CAAC,CAGN,KAAM,CAAAgB,KAAK,CAAG,KAAAA,CAAOC,QAAQ,CAAEC,QAAQ,GAAK,CAC1C,GAAI,CACF,KAAM,CAAA1B,GAAG,CAACwB,KAAK,CAACC,QAAQ,CAAEC,QAAQ,CAAC,CACnC,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAA3B,GAAG,CAAC4B,cAAc,CAAC,CAAC,CAAE;AAC7Cd,OAAO,CAACa,QAAQ,CAAC,CAAE;AACnBnB,kBAAkB,CAAC,IAAI,CAAC,CACxBW,YAAY,CAACU,OAAO,CAAC,MAAM,CAAEP,IAAI,CAACQ,SAAS,CAACH,QAAQ,CAAC,CAAC,CAAE;AAC1D,CAAE,MAAOI,KAAK,CAAE,CACd,KAAM,CAAAA,KAAK,CACb,CACF,CAAC,CAGD,KAAM,CAAAC,MAAM,CAAGA,CAAA,GAAM,CACnBhC,GAAG,CAACiC,YAAY,CAAC,CAAC,CAClBnB,OAAO,CAAC,IAAI,CAAC,CACbN,kBAAkB,CAAC,KAAK,CAAC,CACzBW,YAAY,CAACe,UAAU,CAAC,MAAM,CAAC,CAAE;AAEnC,CAAC,CAGD,KAAM,CAAAC,WAAW,CAAI,CACjB5B,eAAe,CAAEA,eAAe,CAChCE,QAAQ,CAAEA,QAAQ,CAClBC,WAAW,CAAEA,WAAW,CACxBC,WAAW,CAAEA,WAAW,CACxBC,cAAc,CAAEA,cAAc,CAC9BY,KAAK,CACLQ,MAAM,CACNnB,IAAI,CACJI,wBAAwB,CACxBF,iBACJ,CAAC,CAEG;AAEA,mBACMb,IAAA,CAACC,WAAW,CAACiC,QAAQ,EAACC,KAAK,CAAEF,WAAY,CAAA7B,QAAA,CACtCA,QAAQ,CACW,CAAC,CAE7B,CAAC,CAEL,cAAe,CAAAH,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}